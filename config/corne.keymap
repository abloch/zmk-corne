#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        // M0: {} with cursor inside

        m0: m0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE &kp RBRC &kp LEFT_ARROW>;
            label = "M0";
        };

        // M1: () with cursor inside

        m1: m1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
            label = "M1";
        };

        // M2: [] with cursor inside

        m2: m2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp RIGHT_BRACKET &kp LEFT_ARROW>;
            label = "M2";
        };

        // M3: Terminal command

        m3: m3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(LC(LA(T)))>,
                <&macro_wait_time 100>,
                <&kp LA(NUMBER_3)>;

            label = "M3";
        };

        // M4: Alt+7, Cmd+Enter

        m4: m4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LA(NUMBER_7)>,
                <&macro_wait_time 100>,
                <&kp LG(ENTER)>;

            label = "M4";
        };

        // M5: Cmd+K, Cmd+[

        m5: m5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(K) &kp LG(LEFT_BRACKET)>;
            label = "M5";
        };

        // M6: Cmd+K, Cmd+]

        m6: m6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(K) &kp LG(RIGHT_BRACKET)>;
            label = "M6";
        };

        // M7: Cmd+K, Cmd+0

        m7: m7 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(K) &kp LG(NUMBER_0)>;
            label = "M7";
        };

        // M8: Alt+Cmd+P

        m8: m8 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LALT &kp LGUI>,
                <&macro_tap>,
                <&kp P>,
                <&macro_release>,
                <&kp LALT &kp LGUI>;

            label = "M8";
        };

        // M9: ESC, ZZ (vim exit)

        m9: m9 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp LS(Z) &kp LS(Z)>;
            label = "M9";
        };

        // M10: Ctrl+Cmd+Q

        m10: m10 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LG(Q))>;
            label = "M10";
        };

        // M11: Alt+1, Ctrl+1

        m11: m11 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LA(NUMBER_1)>,
                <&macro_wait_time 100>,
                <&kp LC(NUMBER_1)>;

            label = "M11";
        };

        // M12: Alt+1, Ctrl+2

        m12: m12 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LA(NUMBER_1)>,
                <&macro_wait_time 100>,
                <&kp LC(NUMBER_2)>;

            label = "M12";
        };

        // M13: Alt+Ctrl+Left

        m13: m13 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(LEFT_ARROW))>;
            label = "M13";
        };

        // M14: Alt+Ctrl+Right

        m14: m14 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LC(RIGHT_ARROW))>;
            label = "M14";
        };

        // M15: "kubiya" text

        m15: m15 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp K &kp U &kp B &kp I &kp Y &kp A>;

            label = "M15";
        };

        // M20: Ctrl+`, !!, Enter

        m20: m20 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LC(GRAVE)>,
                <&macro_wait_time 100>,
                <&kp EXCL &kp EXCL &kp ENTER>;

            label = "M20";
        };

        // Legacy macros

        term: term {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&kp LG(LC(LA(T)))>,
                <&macro_wait_time 30>,
                <&kp LA(NUMBER_3)>;

            label = "TERM";
        };

        foldall: foldall {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(K) &kp LG(NUMBER_0)>;
            label = "FOLDALL";
        };

        fold: fold {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(K) &kp LG(LEFT_BRACKET)>;
            label = "FOLD";
        };

        expand: expand {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(K) &kp LG(RIGHT_BRACKET)>;
            label = "EXPAND";
        };

        exitvi: exitvi {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &kp LS(Z) &kp LS(Z)>;
            label = "EXITVI";
        };

        thisisunsafe: thisisunsafe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H &kp I &kp S &kp I &kp S &kp U &kp N &kp S &kp A &kp F &kp E>;
            label = "THISISUNSAFE";
        };

        bruno: bruno {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_7)>;
            label = "BRUNO";
        };
    };

    behaviors {
        td10: tap_dance_10 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mkp MB5>, <&none>, <&m10>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // Adapted combos for Corne 42-key layout
        // Key positions for Corne (0-41):
        // 0  1  2  3  4  5       6  7  8  9  10 11
        // 12 13 14 15 16 17      18 19 20 21 22 23
        // 24 25 26 27 28 29      30 31 32 33 34 35
        //          36 37 38      39 40 41

        semicolon {
            bindings = <&kp SEMI>;
            key-positions = <4 16>; // R + F (adapted from T+G)
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <17 29>; // G + B
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <15 4>; // S + E
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <3 16>; // D + E
        };

        dash {
            bindings = <&kp MINUS>;
            key-positions = <14 16>; // D + S
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <26 28>; // X + V
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <19 21>; // J + L
        };

        eql {
            bindings = <&kp EQUAL>;
            key-positions = <31 33>; // M + .
        };

        mo3 {
            bindings = <&mo 3>;
            key-positions = <14 15 16>; // S + D + F
        };

        mo4_right {
            bindings = <&sl 4>;
            key-positions = <19 20 21>; // J + K + L
        };

        mo4_bottom {
            bindings = <&sl 4>;
            key-positions = <31 32 33>; // M + , + .
        };

        mo2 {
            bindings = <&mo 2>;
            key-positions = <14 3 16>; // S + E + F
        };

        to2 {
            bindings = <&to 2>;
            key-positions = <13 14 3 16>; // A + S + E + F
        };

        to3 {
            bindings = <&to 3>;
            key-positions = <13 14 15 16>; // A + S + D + F
        };

        to4 {
            bindings = <&to 4>;
            key-positions = <30 31 32 33>; // N + M + , + .
        };

        mouse1 {
            bindings = <&mkp LCLK>;
            key-positions = <0 12>; // W + D
        };

        mouse2 {
            bindings = <&mkp RCLK>;
            key-positions = <12 24>; // A + C
        };

        bootloader-left {
            bindings = <&bootloader>;
            key-positions = <0 13 24>;
        };

        bootloader-right {
            bindings = <&bootloader>;
            key-positions = <11 22 35>;
        };

        layer5 {
            bindings = <&sl 5>;
            key-positions = <1 13 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Layer 0: Base layer adapted for Corne 42-key
        // ┌───┬───┬───┬───┬───┬───┐     ┌───┬───┬───┬───┬───┬───┐
        // │TAB│ Q │ W │ E │ R │ T │     │ Y │ U │ I │ O │ P │ ⌫ │
        // ├───┼───┼───┼───┼───┼───┤     ├───┼───┼───┼───┼───┼───┤
        // │ESC│ A │ S │ D │ F │ G │     │ H │ J │ K │ L │ ⌫ │ ⌥ │
        // ├───┼───┼───┼───┼───┼───┤     ├───┼───┼───┼───┼───┼───┤
        // │ ` │ Z │ X │ C │ V │ B │     │ N │ M │ , │ . │ / │ ~ │
        // └───┴───┴───┴───┼───┼───┤     ├───┼───┼───┴───┴───┴───┘
        //                 │ ⌘ │_2 │     │ ⌃ │⏎1 │ ⌥ │
        //                 └───┴───┘     └───┴───┴───┘

        base {
            bindings = <
&kp TAB     &kp Q  &kp W  &kp E     &kp R        &kp T        &kp Y      &kp U        &kp I         &kp O    &kp P      &td10
&kp ESCAPE  &kp A  &kp S  &kp D     &kp F        &kp G        &kp H      &kp J        &kp K         &kp L    &kp BSPC   &mkp MB4
&kp GRAVE   &kp Z  &kp X  &kp C     &kp V        &kp B        &kp N      &kp M        &kp COMMA     &kp DOT  &kp SLASH  &kp LS(GRAVE)
                          &kp LGUI  &lt 2 SPACE  &kp LSHFT    &kp LCTRL  &lt 1 ENTER  &kp LEFT_ALT
            >;

            display-name = "base";
        };

        // Layer 1: Symbols layer adapted for Corne
        // ┌───┬───┬───┬───┬───┬───┐     ┌───┬───┬───┬───┬───┬───┐
        // │TO0│{ }│ : │ " │ ' │ $ │     │ ^ │⌘ 7│⌘ 8│⌘ 9│M11│M12│
        // ├───┼───┼───┼───┼───┼───┤     ├───┼───┼───┼───┼───┼───┤
        // │ESC│( )│ $ │ % │ & │ * │     │TRM│⌘ 4│⌘ 5│⌘ 6│M13│M14│
        // ├───┼───┼───┼───┼───┼───┤     ├───┼───┼───┼───┼───┼───┤
        // │ ? │[ ]│ ! │ @ │ # │ : │     │⌘ 0│⌘ 1│⌘ 2│⌘ 3│AC←│AC→│
        // └───┴───┴───┴───┼───┼───┤     ├───┼───┼───┴───┴───┴───┘
        //                 │GUI│SPC│     │CTL│RET│ALT│
        //                 └───┴───┘     └───┴───┴───┘

        symbols {
            bindings = <
&to 0      &m0  &kp COLON        &kp DQT      &kp SQT        &kp DOLLAR      &kp CARET   &kp LA(N7)  &kp LA(N8)  &kp LA(N9)  &m11              &m12
&kp ESC    &m1  &kp DOLLAR       &kp PERCENT  &kp AMPERSAND  &kp ASTERISK    &term       &kp LA(N4)  &kp LA(N5)  &kp LA(N6)  &m13              &m14
&kp QMARK  &m2  &kp EXCLAMATION  &kp AT       &kp HASH       &kp COLON       &kp LA(N0)  &kp LA(N1)  &kp LA(N2)  &kp LA(N3)  &kp LA(LG(LEFT))  &kp LA(LG(RIGHT))
                                 &kp LGUI     &kp SPACE      &kp LSHFT       &kp LCTRL   &kp RET     &kp LALT
            >;

            display-name = "symbols";
        };

        // Layer 2: Navigation layer adapted for Corne
        // ┌───┬───┬───┬───┬───┬───┐     ┌───┬───┬───┬───┬───┬───┐
        // │TO0│⌘ 1│⌘ 2│⌘ 3│   │   │     │FD*│HOM│ ▲ │PgU│   │TO0│
        // ├───┼───┼───┼───┼───┼───┤     ├───┼───┼───┼───┼───┼───┤
        // │ESC│⌃ 1│⌃ 2│⌃ 3│⌃ 4│⌃ 5│     │FLD│ ◄ │ ▼ │ ► │⌘ ←│⌃ T│
        // ├───┼───┼───┼───┼───┼───┤     ├───┼───┼───┼───┼───┼───┤
        // │⌃ `│   │   │   │SF4│F4 │     │EXP│END│DEL│PgD│⌘ ⌦│⌃ `│
        // └───┴───┴───┴───┼───┼───┤     ├───┼───┼───┴───┴───┴───┘
        //                 │GUI│SPC│     │CTL│RET│ALT│
        //                 └───┴───┘     └───┴───┴───┘

        nav {
            bindings = <
&to 0          &kp LG(N1)     &kp LG(N2)  &kp LG(N3)  &none       &none         &foldall          &kp HOME  &kp UP    &kp PG_UP  &none         &to 0
&kp ESC        &kp LC(N1)     &kp LC(N2)  &kp LC(N3)  &kp LC(N4)  &kp LC(N5)    &fold             &kp LEFT  &kp DOWN  &kp RIGHT  &kp LA(BSPC)  &kp LC(TAB)
&kp LC(GRAVE)  &kp LG(LS(E))  &none       &none       &kp LS(F4)  &kp F4        &expand           &kp END   &kp DEL   &kp PG_DN  &kp LA(DEL)   &kp LC(GRAVE)
                                          &kp LGUI    &kp SPACE   &kp LSHFT     &kp LEFT_CONTROL  &kp RET   &kp LALT
            >;

            display-name = "nav";
        };

        // Layer 3: Numbers layer adapted for Corne
        // ┌───┬───┬───┬───┬───┬───┐     ┌───┬───┬───┬───┬───┬───┐
        // │TO0│ 1 │ 2 │ 3 │ 4 │ 5 │     │   │ 7 │ 8 │ 9 │ * │TO0│
        // ├───┼───┼───┼───┼───┼───┤     ├───┼───┼───┼───┼───┼───┤
        // │TO0│⌃ 1│⌃ 2│⌃ 3│⌃ 4│   │     │ + │ 4 │ 5 │ 6 │ + │   │
        // ├───┼───┼───┼───┼───┼───┤     ├───┼───┼───┼───┼───┼───┤
        // │   │   │   │   │   │   │     │ - │ 1 │ 2 │ 3 │ - │ . │
        // └───┴───┴───┴───┼───┼───┤     ├───┼───┼───┴───┴───┴───┘
        //                 │GUI│SPC│     │ . │ 0 │ALT│
        //                 └───┴───┘     └───┴───┴───┘

        numbers {
            bindings = <
&to 0  &kp N1      &kp N2      &kp N3      &kp N4      &kp N5       &none             &kp N7  &kp N8    &kp N9  &kp ASTERISK  &to 0
&to 0  &kp LC(N1)  &kp LC(N2)  &kp LC(N3)  &kp LC(N4)  &none        &kp PLUS          &kp N4  &kp N5    &kp N6  &kp PLUS      &none
&none  &none       &none       &none       &none       &none        &kp MINUS         &kp N1  &kp N2    &kp N3  &kp MINUS     &kp DOT
                               &kp LGUI    &kp SPACE   &kp LSHFT    &kp LEFT_CONTROL  &kp N0  &kp LALT
            >;

            display-name = "numbers";
        };

        // Layer 4: Function layer adapted for Corne
        // ┌───┬───┬───┬───┬───┬───┐     ┌───┬───┬───┬───┬───┬───┐
        // │TO0│M9 │F2 │G12│F12│F9 │     │F5 │F10│F11│SF1│M8 │TO0│
        // ├───┼───┼───┼───┼───┼───┤     ├───┼───┼───┼───┼───┼───┤
        // │TO0│M20│CAG│SG4│⌘ F│SGF│     │SGF│F4 │M15│SGL│   │   │
        // ├───┼───┼───┼───┼───┼───┤     ├───┼───┼───┼───┼───┼───┤
        // │CAP│   │   │SGC│⌘ V│CAV│     │SF5│M4 │   │   │   │CAP│
        // └───┴───┴───┴───┼───┼───┤     ├───┼───┼───┴───┴───┴───┘
        //                 │GUI│   │     │CTL│   │ALT│
        //                 └───┴───┘     └───┴───┴───┘

        function {
            bindings = <
&to 0     &m9    &kp F2             &kp LG(F12)     &kp F12             &kp F9               &kp F5          &kp F10            &kp F11        &kp LS(F11)    &m8               &to 0
&to 0     &m20   &kp LC(LA(LG(S)))  &kp LS(LG(N4))  &kp LG(F)           &kp LS(LG(F))        &kp LS(LG(F5))  &kp F4             &m15           &kp LS(LG(L))  &kp LG(F8)        &none
&kp CAPS  &none  &none              &kp LS(LG(C))   &kp LG(V)           &kp LC(LA(LG(V)))    &kp LS(F5)      &m4                &thisisunsafe  &sl 5          &kp LC(LA(LEFT))  &kp LA(LC(RIGHT))
                                    &kp LGUI        &kp LG(LS(ESCAPE))  &caps_word           &kp LCTRL       &kp LS(LG(SPACE))  &kp LALT
            >;

            display-name = "function";
        };

        bt {
            bindings = <
&bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_CLR        &trans     &kp F7   &kp F8    &kp F9  &trans  &trans
&bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &bt BT_CLR_ALL    &trans     &kp F4   &kp F5    &kp F6  &trans  &trans
&trans         &trans         &kp A          &trans         &trans         &trans            &trans     &kp F1   &kp F2    &kp F3  &trans  &trans
                                             &kp LGUI       &trans         &kp LSHFT         &kp LCTRL  &kp F10  &kp LALT
            >;
        };
    };

    conditional_layers {
    };
};
